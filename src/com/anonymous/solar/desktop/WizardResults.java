/*
 *
 */
package com.anonymous.solar.desktop;

import com.anonymous.solar.shared.SolarCalculatorLocal;
import com.anonymous.solar.shared.SolarResult;
import com.anonymous.solar.shared.SolarResultException;
import com.anonymous.solar.shared.SolarSetup;

/**
 * Wizard Panel to display the results that come back from the server.
 * 
 * @author 07627505 Darran Kartaschew
 * @version 1.0
 */
public class WizardResults extends javax.swing.JPanel implements WizardPanel {
    
    /**
	 * 
	 */
	private static final long serialVersionUID = 1185924630290486108L;
	private final String title = "Results";
    private Wizard parent = null;
    
    /**
     * Creates new form WizardFinish, with reference to parent
     */
    public WizardResults(Wizard parent) {
        initComponents();
        this.parent = parent;
    }
    /**
     * Creates new form WizardResults
     */
    public WizardResults() {
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

    	jLabelConfirmationMsg = new javax.swing.JLabel();
		jPanel1 = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextAreaConfirmationDetails = new javax.swing.JEditorPane("text/html", "");


		jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

		jTextAreaConfirmationDetails.setEditable(false);
		//jTextAreaConfirmationDetails.setColumns(20);
		//jTextAreaConfirmationDetails.setRows(5);
		jScrollPane1.setViewportView(jTextAreaConfirmationDetails);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 0, Short.MAX_VALUE)
				.addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 443,
												Short.MAX_VALUE).addContainerGap())));
		jPanel1Layout.setVerticalGroup(jPanel1Layout
				.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGap(0, 227, Short.MAX_VALUE)
				.addGroup(
						jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
								jPanel1Layout
										.createSequentialGroup()
										.addContainerGap()
										.addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 226,
												Short.MAX_VALUE).addContainerGap())));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
		this.setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				layout.createSequentialGroup()
						.addContainerGap()
						.addGroup(
								layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(
												layout.createSequentialGroup().addGap(0, 0, Short.MAX_VALUE)
														.addComponent(jLabelConfirmationMsg))
										.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
												javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
						.addContainerGap()));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(
				javax.swing.GroupLayout.Alignment.TRAILING,
				layout.createSequentialGroup()
						.addContainerGap()
						.addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
								javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
						.addComponent(jLabelConfirmationMsg).addContainerGap()));
	}// </editor-fold>//GEN-END:initComponents
		// Variables declaration - do not modify//GEN-BEGIN:variables

	private javax.swing.JLabel jLabelConfirmationMsg;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JEditorPane jTextAreaConfirmationDetails;

	// End of variables declaration//GEN-END:variables


    /**
     * Callback method used by the parent panel to notify this panel that we
     * have been given context to the user.
     * @return true is ok to move.
     */
    @Override
    public boolean callbackStart() {
        SolarSetup global = parent.getSetup();
        SolarResult results = null;
        if (global != null) {
        	try {
				results = new SolarResult(global);
			} catch (SolarResultException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
        	SolarCalculatorLocal calculator = new SolarCalculatorLocal();
        	results = calculator.calculateDailySavings(results, 1);
        	results = calculator.calculateYearlySavings(results, 1);
        	results = calculator.calculateYearlySavingsOverTime(results, 10);
        	
        	jTextAreaConfirmationDetails.setText(results.toString());
        	
        }
    	return true;
    }

    /**
     * Callback method used by the parent panel to notify this panel that we
     * have requested a move away from this panel.
     * @return true is ok to move.
     */
    @Override
    public boolean callbackDispose(boolean validateInput) {

    	return true;
    }

    /**
     * Return the title to be used for this wizard panel;
     * @return 
     */
    @Override
    public String getTitle() {
        return title;
    }
}
